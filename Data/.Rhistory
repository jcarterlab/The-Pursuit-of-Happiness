xlab("") +
ylab("") +
my_theme +
theme(legend.text = element_blank(),
legend.key =  element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.text = element_blank(),
legend.background = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.text = element_blank(),
legend.justification = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.text = element_blank(),
legend() = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.text = element_blank(),
legend.box.margin = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.text = element_blank(),
legend.box.background = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.key = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.background = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.margin = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.spacing = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.key = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.title = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.position = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.box.background = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend =none)
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme()
?theme
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.background = element_blank())
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.position = "none")
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
filter(measure != 'sun') %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.position = "none")
library(dplyr)
library(tidyverse)
library(readxl)
library(writexl)
library(ggplot2)
library(ggthemes)
# sets the working directory.
setwd("C://Users//HUAWEI//Desktop//Projects//The-Pursuit-of-Happiness//Data")
# reads in the processed sunshine dataframe.
initial_df <- read_xlsx('integrated_data.xls')
# defines the y and x variables to be used in the linear model
y = 'Life Ladder'
x <- c('Log GDP per capita', 'Social support',
'Healthy life expectancy at birth', 'Freedom to make life choices',
'Generosity', 'Perceptions of corruption', 'sun')
# a working dataframe with only y and x variables
df <- initial_df[y] %>% cbind(initial_df[x]) %>% tibble()
# checks if a row contains na values
check_row_clean <- function(row) {
if(mean(is.na(row))>0) {
return(FALSE)
}
else{
return(TRUE)
}
}
# calculates z scores for a given column
get_zscores <- function(col) {
avg <- mean(col)
sd <- sd(col)
z_scores <- list()
for(i in 1:length(col)) {
z_scores[i] <- (col[i]-avg) / sd
}
return(unlist(z_scores))
}
# combines previous preprocessing steps
clean_data <- function(df) {
# filters the dataframe for only na free rows
clean_list <- apply(df, 1, check_row_clean)
clean_df <- df[clean_list,]
# converts the dataframe columns into z scores
z_list <- apply(clean_df, 2, get_zscores)
normalized_df <- as_tibble(z_list)
return(normalized_df)
}
# returns a clean dataframe
clean_df <- clean_data(df)
# checks for remaining na values
#sum(is.na(clean_df))
# my personal plot theme for data visualizations.
my_theme <- theme_economist_white(gray_bg = FALSE) +
theme(plot.title = element_text(hjust = 0.5,
vjust = 10,
size = 10,
color = "#474747"),
plot.margin = unit(c(1.5, 1, 1.5, 1), "cm"),
axis.text = element_text(size = 9,
color = "gray30"),
axis.text.x=element_text(vjust = -2.5),
axis.title.x = element_text(size = 9,
color = "gray30",
vjust = -10),
axis.title.y = element_text(size = 9,
color = "gray30",
vjust = 10),
legend.direction = "vertical",
legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 11,
color = "gray20"),
legend.margin=margin(1, -15, 1, 0),
legend.spacing.x = unit(0.25, "cm"),
legend.key.size = unit(1, "cm"),
legend.key.height = unit(0.75, "cm"),
strip.text = element_text(hjust = 0.5,
vjust = 1,
size = 10,
color = "#474747"),
panel.spacing = unit(2, "lines"))
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
filter(measure != 'sun') %>%
ggplot(aes(y='Life Ladder', x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.position = "none")
library(dplyr)
library(tidyverse)
library(readxl)
library(writexl)
library(ggplot2)
library(ggthemes)
# sets the working directory.
setwd("C://Users//HUAWEI//Desktop//Projects//The-Pursuit-of-Happiness//Data")
# reads in the processed sunshine dataframe.
initial_df <- read_xlsx('integrated_data.xls')
# defines the y and x variables to be used in the linear model
y = 'Life Ladder'
x <- c('Log GDP per capita', 'Social support',
'Healthy life expectancy at birth', 'Freedom to make life choices',
'Generosity', 'Perceptions of corruption', 'sun')
# a working dataframe with only y and x variables
df <- initial_df[y] %>% cbind(initial_df[x]) %>% tibble()
# checks if a row contains na values
check_row_clean <- function(row) {
if(mean(is.na(row))>0) {
return(FALSE)
}
else{
return(TRUE)
}
}
# calculates z scores for a given column
get_zscores <- function(col) {
avg <- mean(col)
sd <- sd(col)
z_scores <- list()
for(i in 1:length(col)) {
z_scores[i] <- (col[i]-avg) / sd
}
return(unlist(z_scores))
}
# combines previous preprocessing steps
clean_data <- function(df) {
# filters the dataframe for only na free rows
clean_list <- apply(df, 1, check_row_clean)
clean_df <- df[clean_list,]
# converts the dataframe columns into z scores
z_list <- apply(clean_df, 2, get_zscores)
normalized_df <- as_tibble(z_list)
return(normalized_df)
}
# returns a clean dataframe
clean_df <- clean_data(df)
# checks for remaining na values
#sum(is.na(clean_df))
# my personal plot theme for data visualizations.
my_theme <- theme_economist_white(gray_bg = FALSE) +
theme(plot.title = element_text(hjust = 0.5,
vjust = 10,
size = 10,
color = "#474747"),
plot.margin = unit(c(1.5, 1, 1.5, 1), "cm"),
axis.text = element_text(size = 9,
color = "gray30"),
axis.text.x=element_text(vjust = -2.5),
axis.title.x = element_text(size = 9,
color = "gray30",
vjust = -10),
axis.title.y = element_text(size = 9,
color = "gray30",
vjust = 10),
legend.direction = "vertical",
legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 11,
color = "gray20"),
legend.margin=margin(1, -15, 1, 0),
legend.spacing.x = unit(0.25, "cm"),
legend.key.size = unit(1, "cm"),
legend.key.height = unit(0.75, "cm"),
strip.text = element_text(hjust = 0.5,
vjust = 1,
size = 10,
color = "#474747"),
panel.spacing = unit(2, "lines"))
# renames the life ladder column
clean_df <- rename(clean_df, life_ladder = 'Life Ladder')
# creates a faceted scatter plot
clean_df %>%
gather(key=measure, value='value', -1) %>%
filter(measure != 'sun') %>%
ggplot(aes(y=life_ladder, x=value, col=measure)) +
geom_point() +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.position = "none")
# creates a faceted scatter plot
clean_df %>%
ggplot(aes(y=life_ladder, x=sun, col=measure)) +
geom_point(alpha=0.8) +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.position = "none")
# creates a faceted scatter plot
clean_df %>%
ggplot(aes(y=life_ladder, x=sun)) +
geom_point(alpha=0.8) +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
facet_wrap(~measure, scales="free") +
xlab("") +
ylab("") +
my_theme +
theme(legend.position = "none")
# creates a faceted scatter plot
clean_df %>%
ggplot(aes(y=life_ladder, x=sun)) +
geom_point(alpha=0.8) +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
xlab("") +
ylab("") +
my_theme +
theme(legend.position = "none")
# creates a faceted scatter plot
clean_df %>%
ggplot(aes(y=life_ladder, x=sun, col='orange')) +
geom_point(alpha=0.8) +
geom_smooth(method='lm', formula=y~x) +
ggtitle("") +
xlab("") +
ylab("") +
my_theme +
theme(legend.position = "none")
# creates a faceted scatter plot
clean_df %>%
ggplot(aes(y=life_ladder, x=sun, col='orange')) +
geom_point(alpha=0.8) +
geom_smooth(method='lm', formula=y~x) +
ggtitle("Sunishine hours") +
xlab("Sunshine hours") +
ylab("Happiness") +
my_theme +
theme(legend.position = "none")
# creates a faceted scatter plot
clean_df %>%
ggplot(aes(y=life_ladder, x=sun, col='orange')) +
geom_point(alpha=0.8) +
geom_smooth(method='lm', formula=y~x) +
ggtitle("Target variable") +
xlab("Sunshine hours") +
ylab("Happiness") +
my_theme +
theme(legend.position = "none")
initial_df
# reads in original dataframe with regional information included.
regional_data <- read_xlsx('happiness_data.xls')
library(dplyr)
library(tidyverse)
library(readxl)
library(writexl)
library(ggplot2)
library(ggthemes)
# reads in original dataframe with regional information included.
regional_data <- read_xlsx('happiness_data.xls')
